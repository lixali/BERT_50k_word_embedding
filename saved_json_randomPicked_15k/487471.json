{
 "id": "487471",
 "text": "The GOST block cipher (Magma), defined in the standard GOST 28147-89 (RFC 5830), is a Soviet and Russian government standard symmetric key block cipher with a block size of 64 bits. The original standard, published in 1989, did not give the cipher any name, but the most recent revision of the standard, GOST R 34.12-2015 (RFC 7801, RFC 8891), specifies that it may be referred to as Magma. The GOST hash function is based on this cipher. The new standard also specifies a new 128-bit block cipher called Kuznyechik. Developed in the 1970s, the standard had been marked \"Top Secret\" and then downgraded to \"Secret\" in 1990. Shortly after the dissolution of the USSR, it was declassified and it was released to the public in 1994. GOST 28147 was a Soviet alternative to the United States standard algorithm, DES. Thus, the two are very similar in structure. ==The algorithm== GOST has a 64-bit block size and a key length of 256 bits. Its S-boxes can be secret, and they contain about 354 (log2(16!8)) bits of secret information, so the effective key size can be increased to 610 bits; however, a chosen-key attack can recover the contents of the S-boxes in approximately 232 encryptions. GOST is a Feistel network of 32 rounds. Its round function is very simple: add a 32-bit subkey modulo 232, put the result through a layer of S-boxes, and rotate that result left by 11 bits. The result of that is the output of the round function. In the adjacent diagram, one line represents 32 bits. The subkeys are chosen in a pre-specified order. The key schedule is very simple: break the 256-bit key into eight 32-bit subkeys, and each subkey is used four times in the algorithm; the first 24 rounds use the key words in order, the last 8 rounds use them in reverse order. The S-boxes accept a four-bit input and produce a four-bit output. The S-box substitution in the round function consists of eight 4 × 4 S-boxes. The S-boxes are implementation-dependent, thus parties that want to secure their communications using GOST must be using the same S-boxes. For extra security, the S-boxes can be kept secret. In the original standard where GOST was specified, no S-boxes were given, but they were to be supplied somehow. This led to speculation that organizations the government wished to spy on were given weak S-boxes. One GOST chip manufacturer reported that he generated S-boxes himself using a pseudorandom number generator. For example, the Central Bank of Russian Federation used the following S-boxes: {|class=\"wikitable\" !# !S-box |- !1 |4 A 9 2 D 8 0 E 6 B 1 C 7 F 5 3 |- !2 |E B 4 C 6 D F A 2 3 8 1 0 7 5 9 |- !3 |5 8 1 D A 3 4 2 E F C 7 6 0 9 B |- !4 |7 D A 1 0 8 9 F E 4 6 C B 2 5 3 |- !5 |6 C 7 1 5 F D 8 4 A 9 E 0 3 B 2 |- !6 |4 B A 0 7 2 1 D 3 6 8 5 9 C F E |- !7 |D B 4 1 3 F 5 9 0 A E 7 6 8 2 C |- !8 |1 F D 0 5 7 A 4 9 2 3 E 6 B 8 C |} However, the most recent revision of the standard, GOST R 34.12-2015, adds the missing S-box specification and defines it as follows. {| class=\"wikitable\" !# !GOST R 34.12-2015 S-box |- !1 |C 4 6 2 A 5 B 9 E 8 D 7 0 3 F 1 |- !2 |6 8 2 3 9 A 5 C 1 E 4 7 B D 0 F |- !3 |B 3 5 8 2 F A D E 1 7 4 C 9 6 0 |- !4 |C 8 2 1 D 4 F 6 7 0 A 5 3 E 9 B |- !5 |7 F 5 A 8 1 6 D 0 9 3 E B 4 2 C |- !6 |5 D F 6 9 2 C A B 7 8 1 4 3 E 0 |- !7 |8 E 2 5 6 9 1 C F 4 B 0 D A 3 7 |- !8 |1 7 E D 0 5 8 3 4 F A 6 9 C B 2 |} ==Cryptanalysis of GOST== The latest cryptanalysis of GOST shows that it is secure in a theoretical sense. In practice, the data and memory complexity of the best published attacks has reached the level of practical, while the time complexity of even the best attack is still 2192 when 264 data is available. Since 2007, several attacks have been developed against reduced-round GOST implementations and/or weak keys. In 2011 several authors discovered more significant flaws in GOST, being able to attack the full 32-round GOST with arbitrary keys for the first time. It has even been called \"a deeply flawed cipher\" by Nicolas Courtois. Initial attacks were able to reduce time complexity from 2256 to 2228 at the cost of huge memory requirements, and soon they were improved up to 2178 time complexity (at the cost of 270 memory and 264 data). In December 2012, Courtois, Gawinecki, and Song improved attacks on GOST by computing only 2101 GOST rounds. Isobe had already published a single key attack on the full GOST cipher, which Dinur, Dunkelman, and Shamir improved upon, reaching 2224 time complexity for 232 data and 236 memory, and 2192 time complexity for 264 data. Since the attacks reduce the expected strength from 2256 (key length) to around 2178, the cipher can be considered broken. However, for any block cipher with block size of n bits, the maximum amount of plaintext that can be encrypted before rekeying must take place is 2n/2 blocks, due to the birthday paradox, and none of the aforementioned attacks require less than 232 data. ==See also== *GOST standards ==References== ==Further reading== * * * * ==External links== * Description, texts of the standard, online GOST encrypt and decrypt tools * SCAN's entry for GOST * An open source implementation of PKCS#11 software device with Russian GOST cryptography standards capabilities *https://github.com/gost- engine/engine — open-source implementation of Russian GOST cryptography for OpenSSL. Category:Broken block ciphers Category:Feistel ciphers Category:GOST standards",
 "title": "GOST (block cipher)"
}