{
 "id": "542386",
 "text": "Btrieve is a transactional database (navigational database) software product. It is based on Indexed Sequential Access Method (ISAM), which is a way of storing data for fast retrieval. There have been several versions of the product for DOS, Linux, older versions of Microsoft Windows, 32-bit IBM OS/2 and for Novell NetWare. It was originally a record manager published by SoftCraft. Btrieve was written by Doug Woodward and Nancy Woodward and initial funding was provided in part by Doug's brother Loyd Woodward. Around the same time as the release of the first IBM PCs, Doug received 50% of the company as a wedding gift and later purchased the remainder from his brother. After gaining market share and popularity, it was acquired from Doug and Nancy Woodward by Novell in 1987, for integration into their NetWare operating system in addition to continuing with the DOS version. The product gained significant market share as a database embedded in mid-market applications in addition to being embedded in every copy of NetWare 2.x, 3.x and 4.x since it was available on every NetWare network. After some reorganization within Novell, it was decided in 1994 to spin off the product and technology to Doug and Nancy Woodward along with Ron Harris, to be developed by a new company known as Btrieve Technologies, Inc. (BTI). Btrieve was modularized starting with version 6.15 and became one of two database front-ends that plugged into a standard software interface called the MicroKernel Database Engine. The Btrieve front-end supported the Btrieve API and the other front-end was called Scalable SQL, a relational database product based upon the MKDE that used its own variety of Structured Query Language, otherwise known as SQL. After these versions were released (Btrieve 6.15 and ScalableSQL v4) the company was renamed to Pervasive Software prior to their IPO. Shortly thereafter the Btrieve and ScalableSQL products were combined into the products sold as Pervasive.SQL or PSQL, and later Actian Zen. Btrieve continued for a few years while ScalableSQL was quickly dropped. Customers were encouraged to upgrade to Pervasive.SQL, which supported both SQL and Btrieve applications. ==Architecture== thumb|280px|The MKDE model allows for different database backends to be plugged into Pervasive's product Btrieve is not a relational database management system (RDBMS). Early descriptions of Btrieve referred to it as a record manager (though Pervasive initially used the term navigational database but later changed this to transactional database) because it only deals with the underlying record creation, data retrieval, record updating and data deletion primitives. It uses ISAM as its underlying indexing and storage mechanism. A key part of Pervasive's architecture is the use of a MicroKernel Database Engine, which allows different database backends to be modularised and integrated easily into their DBMS package, Pervasive.SQL. This has enabled them to support both their Btrieve navigational database engine and an SQL- based engine, Scalable SQL. Current versions of Btrieve support system transactions and user transactions, where system transactions are a bundle of non-transactional operations and/or user transactions, whereas user transactions are transactions that work on actual data in the database. System transactions were developed to allow multiple transactions to be done in a batch and to make data recovery easier. The Btrieve file format consists entirely of pages, which are the data that move between memory and storage when the engine performs an input/output operation. Versions prior to 6.0 merely used data pages, index pages and a file control record. The file had an index for searching that linked to physical pages. Beginning with version 6.0 logical pages were used. Logical are mapped to physical pages (pages at a fixed location in the file) on the disk by page allocation tables. The file control record contains important information about Btrieve files, such as the number of pages in current use. To avoid database corruption, Btrieve uses two methods of updating records: pre-image paging in Btrieve versions before 6.0, and shadow paging in subsequent versions. It was primarily the change-over from pre-image paging to shadow-paging, which necessitated radical file format changes, that caused compatibility issues between version 6 and previous versions. ==History== Btrieve has been owned and developed by four different companies: SoftCraft, Novell, Btrieve Technologies, Inc. (later renamed Pervasive Software), and Actian Corporation. They have a committed and loyal developer-base and according to company literature, they remain fully committed to the product. Pervasive Software set up a \"Btrieve Society\" to recognise existing developers. Under DOS, Btrieve up to version 5, was a terminate-and-stay-resident program (TSR) which functioned as an application programming interface (API) database engine, supplying applications programs with function calls to implement a multi-user database with record locking. The network version worked in a similar way. In the early years, DOS versions up to version 5 sold for a price of around US$1,000, but the executable TSR database engine file could be distributed with applications without charge. ===SoftCraft years=== The product was launched in February 1982 by SoftCraft, a firm located in Austin, Texas, by Doug and Nancy Woodward. Doug became the vice-president and handled software development, Nancy became the president of the company. They released a number of versions over the next few years: in February 1983 they released the Btrieve 2.x series, and when MS-DOS 2.0 developed support for file and directory handles, they released Btrieve 3.0. When MS-DOS 3.1 standardised its internal interfaces in March 1985, they released Btrieve 3.1 C/S one month later, which had network and client/server support. In February 1986, Btrieve 4.0 was released, and when the 4.1 upgrade was released it gained support for extended key types and supplemental indexes. Although Btrieve was fairly popular, it was an API database engine. The killer-app database manager on the PC, dBase II and its successors, were database management systems (DBMS) which could be used either as a free- standing, general-purpose application, or a database programming language. Btrieve was also more expensive to buy than dBase, although run-time licensing was free of charge. Btrieve grew to a developer base of over 5,000 users and was widely used in the financial area. The company took some time to create a user interface for the product, however in 1984 they released Xtrieve, a menu- driven program that used a new .DDF data dictionary to enforce relational database rules. ===Novell acquisition=== right|76px In 1987, Novell started diversifying and buying companies to add to their NetWare operating system. One of the companies they purchased was SoftCraft. Nancy Woodward became the Vice-President and General Manager of Novell's Austin operations while Doug Woodward became the Vice-President of Advanced Database Technologies. Early the next year, Btrieve 5.0 was released to run as a native NetWare application, or Value Added Process. According to Jim Kyle, \"it had auto- increment key types, the BROUTER network process server, data-only and key- only files, and optional data compression\". Version 5.1 was released in 1990 with increased file-handling transaction capability, logging and roll-forward operations, along with several API enhancements. Several versions were created for DOS, OS/2 and Microsoft Windows. Version 6.0 was released in June 1992. However, it was not promoted extensively by Novell, and due to enhancements, (such as the change from pre-imaging to shadow-paging) it was incompatible with previous versions of Btrieve. The market did not increase much for Btrieve and it did not see wide adoption due to these issues. When the company was acquired by Novell, SoftCraft had been working on a product called XQL, an SQL interpreter designed to better deal with industry standard SQL, which the Xtrieve package was not fully compliant with. This became the basis for NetWare SQL, which was initially released in 1989, and was a bare-bones SQL interpreter which implemented the base IBM version of SQL. ===Btrieve Technologies, Inc.=== right By 1994, Novell had largely given up on attempting to make NetWare into a complete alternative operating system, and started selling off many of the companies it had acquired only a few years earlier. They had minimally promoted Btrieve, largely due to the delay (24 months) in releasing version 6. Negotiations between The Woodwards and Novell were entered into, and after two years Novell announced on 26 Jan, 1994 that it was going to transfer ownership of Btrieve to Btrieve Technologies, Incorporated (also known as BTI). On 29 April 1994, the transfer was completed and Nancy Woodward became the Chairman of BTI and Doug Woodward was made the Chief Technical Officer. The CEO position was given to Ron Harris, a former employee of Texas Instruments, and one of the founding employees of Citrix Systems, Inc. where he was employed first as Director of Strategic Planning, then as Vice-President of Marketing, and finally as the Product Group Vice President. Btrieve was totally rewritten, and on 1 July 1994 Btrieve 6.15 for DOS, Windows and OS/2 was released. Novell SQL was renamed to Scalable SQL reflecting the change in ownership of the company. In 1995, version 6.15 was released for Novell NetWare, Windows NT Server and for Windows NT/95, and thus became a cross-platform database product. The concept of a Micro Kernel Database Engine (MKDE) was introduced in this version. ===Pervasive Software=== In 1996, the company renamed itself to Pervasive Software, and their product to Pervasive.SQL. In 1997, the company went public. They did this in order to allow greater penetration of the relational database market and to re-align as an SQL vendor, though they are still marketing and developing Btrieve. Pervasive completed its IPO in September. The company continued using the MKDE in version 6.30. In 1997, Pervasive released ScalableSQL 4.0, a relational database product, and Btrieve 7.0. In 2000, Novell was criticized after it ceased bundling Pervasive.SQL with NetWare from version 5.1 onwards; instead, it shipped with a trial version that shut down after 90 days. The latest version, Pervasive PSQL Summit v11, was released in September 2010. ===Actian Corporation=== In 2013, Actian Corporation acquired Pervasive Software. In February 2016 Actian released Btrieve 12. ==Versions== ===Btrieve for DOS=== There was one DOS client-based configuration of Btrieve created by SoftCraft. SoftCraft's definition of a client-based version was a \"Btrieve engine running on a particular workstation.\" This meant the record- management engine connected directly to the files via operating system functions and modified the records accordingly, whether the files were local or on a network. The client-based engine allowed five concurrent users to access the database at any one time. All record processing was done on the workstation the engine was installed on. In later versions, Btrieve for DOS could use either of two modes: what they called SEFS (Single-Engine File Sharing) or MEFS (Multi-Engine File Sharing). ===Btrieve for Netware=== Btrieve for Netware was essentially the same as Btrieve for DOS with some extra features available only on Netware at the time. It ran a server process, called `BSERVER`, on the file-sharing server and this managed data input/output in conjunction with the network file system. The server process was first implemented as a Netware Value-Added Process (VAP) called `BSERVER.VAP`, but was switched to a Netware NetWare Loadable Module (NLM) soon after. `BSERVER` was the database engine that dealt with access to records, however it also accepted requests for the transmission of requested data to another server via the `BROUTER` process. Btrieve used requesters to make database input/output requests from the client workstation. The requesters were available for DOS, OS/2, Microsoft Windows, and UnixWare. The program `BREQUEST.EXE` accepted input/output requests via the Btrieve API and relayed them to `BSERVER`. It then handled the responses from `BSERVER` and relayed them back to the appropriate application. The `BROUTER` process allowed for incoming requests to be \"routed\" to a copy of the database on another server. It was loaded on the Netware server and dealt with communication between multiple server processes running on the file-server through the use of two File Server Tables. According to Pervasive, these provide a list of \"server names and addresses, and the Server Routing Table\". BROUTER also enabled communication requests to be routed to the correct server via SPX by looking up the `BSPXCOM` NetWare Loadable Module and coordinated locks and other mechanisms that controlled access to the data in the Btrieve database. Btrieve for DOS used the SEFS and MEFS modes for file sharing, and because it was able to run on a network it was able to use exclusive and concurrent transactions. ===Btrieve for Windows=== Btrieve for Windows was created before the company rewrote the codebase to use the MKDE. It featured SEFS and MEFS file sharing mechanisms; used shadow-paging and allowed for exclusive and concurrent locks. It handled version 6.x and 6.1 files differently. Version 6.x files could handle operations on part of a record rather than locking the entire record. It handled records larger than 64KB, implemented VATs, ACSs, new data types, allowed for percentage operations (where the record could be located and manipulated by the physical location in the file) and handled duplicate keys. Version 6.x was capable of dropping or adding any index on the fly (version 6.0 and below could drop only supplemental indexes). Version 6.1 files allowed for concurrent and system transactions, the optional renumbering of keys, case insensitive ACS tables, and enhanced locking operations. Btrieve for Windows could run as a client to the database that utilized SEFS or MEFS modes, or it could directly access the Btrieve server. ====Client-based Btrieve==== right|250px|border The client- based version of Btrieve has all the database files either directly on the local computer or via a mapped network drive (set up via the DOS `NET USE` command). Applications make a function call to `WBTRCALL.DLL`, a loader and requester interface. The loader and requester module verify the `BTI.INI` configuration file is correctly set up to load the client-based Btrieve engine. In turn, this loads the local interface to the btrieve engine (`WBTRLOCL.DLL`). If necessary, this local interface loads the Btrieve engine (`WBTR32.EXE`) into memory and sends the necessary database requests to it. The database engine then calls various Win32 system libraries to perform file operations on the database files. ====Client-based Btrieve accessing server- based Btrieve==== The client-based version of Btrieve for Windows could access server-based versions of Btrieve via a DOS-based \"requester\". The requestor required the use of DOS Protected Mode Interface (DPMI) which allowed program access to DOS extended memory accessible only via the CPU's Protected Mode. As with the client-based interface, the Btrieve-based application makes a call to the `WBTRCALL.DLL` loader and requester interface library. This library checks the `BTI.INI` file to see if it needs to access data on the local system or whether it needs to access data on a remote server. If it needs to access the server, then it uses the Windows version of DPMI to access a DOS-based requester named `BREQUEST.EXE`. The requester then establishes a network connection to the server, which processes the request and passes back a message to the requester when the database request is completed. ===Btrieve for Windows NT/Windows 95=== Btrieve for Windows NT and Windows 95 was released in 1995, along with Btrieve for Netware and Btrieve for Windows NT Server. It had reached version 6.15 and started using the MKDE. The file sharing mechanisms remained the same, as it still used SEFS and MEFS file sharing modes, shadow-paging and allowed for exclusive and concurrent locks. This version of Btrieve allowed for null values in keys, which meant that a record could be entered into the database when information on the key was not available. It meant the key would not be included into the index, and this helped decrease unnecessary searching of the database via the index. It also introduced the concept of a system transaction and a user transaction. (see System and user transactions). The MKDE also allowed gaps between auto- incremented keys. Variable-tail allocation tables were introduced in version 6.15, so they were included in the Windows NT/95 build of Btrieve. There are two configurations of Btrieve for Windows NT/95, standalone workstation and client/server. ====Standalone workstation==== right|250px|border When using the standalone workstation configuration of Btrieve, all processing of records is done on the local workstation. The workstation relies on the underlying mechanisms of Windows to allow the MKDE (program `W32MKDE.EXE`) to gain direct access to the database files, and uses lock files to deal with concurrency issues. In this configuration, the application makes calls to the Btrieve API, or Microkernel Interface (`WBTRV32.DLL`). The call is then processed by the interface and passed to the MKDE (`W32MKDE.EXE`) which uses the underlying operating system file system (whether it be network or local) to directly access the database files. This leads to some peculiar issues. If Btrieve uses Windows file sharing and has the database engine open files directly on a file share, for instance, and there is network instability (e.g. a network cable is disconnected) during an update the fields used to link one Btrieve file to another can become unsynchronized (to all intents and purposes the data loses its relationships or links to other data) and the database file itself can get corrupted (though the chance of this is reduced due to pre-image paging). ====Client/Server==== right|border|500px When using the client/server (or Server edition) configuration of Btrieve, processing of records is generally done on a Windows file server via a mapped drive (a way of mapping a file share to a \"virtual\" disk drive in Windows via the `NET USE` command). It utilises the permissions that you are assigned when authenticating, either log-on permissions, or permissions given when `NET USE` is utilized.Btrieve for Windows 95/NT Installation and Operation, 2–5 On Windows 95, the MKDE interface (a Windows dynamic link library (DLL) called `WBTRV32.DLL`) determines what database access method is in use via the configuration file. If it detects both the client/server and workstation engines are installed on the same machine, it checks whether the target is set to workstation or server. If running on Windows NT and the server process `NTMKDE.EXE` is running along with the standalone workstation process `W32MKDE.EXE` it looks in the registry to determine if the target is a server or workstation. In both cases, if the MKDE interface is set to workstation, (the \"Standalone workstation\" configuration) it uses the MKDE (`W32MKDE.EXE`) to access the file directly. If it is set to server, the MKDE interface on the client uses a communications module (on Windows 95 this is `W32BTICM.DLL`, on Windows NT this is `NTBTICM.DLL`) that \"talks\" to the server. The server itself has its own matching communications module (again either `W32BTICM.DLL` or `NTBTICM.DLL`) that resides on the mapped drive. The server DLL communicates with the server MKDE (`NTMKDE.EXE`) which updates records, then sends a confirmation that the operation succeeded, back through the communications module to the client.Btrieve for Windows 95/NT Installation and Operation, 2–4 The advantage of this system is, if a network connection failure occurs, the MKDE on the server will be able to detect it and recover in a more graceful manner than the workstation configuration is able to. ====Configuration==== A configuration utility was included with Btrieve to alter MKDE settings. The settings that could be changed were: * File settings: this category contains settings related to files, file handles, record locks, indexes, and log files. The number of open files and logical file handles was set in here, as well as the number of record locks per client; index balancing and an option to create files in pre 6.x format are in this category. It also controlled whether the Microkernel kept a log of operations executed on selected files. In this section the method of file sharing could be set to either MEFS or SEFS. The system transaction hold limit sets the number of system transactions performed during write operations for shared files. * Memory organisation: this category contained settings related to the size of buffers the Microkernel needed to allocate for various purposes. * Client/System transactions: this category contains settings related to transactions, including the number supported and how and when they will be logged. * System resources/directories: this category contains settings related to the number of clients and threads supported as well as the location of various system files. * Trace operations: this category contains settings related to tracing various Btrieve operations. Tracing is an advanced feature used mainly for debugging purposes. ===Pervasive.SQL 7=== Pervasive.SQL 7 was released in March, 1998, and included Scalable SQL 4 and Btrieve 7.0. Btrieve 7.0 ran on the same platforms as Btrieve 6.x: Windows 95, Windows NT 3.51 & 4, Netware and DOS. However, the company changed to a component-based architecture called SmartComponents to resolve compatibility issues with upgrades. This used a component identification scheme both embedded into the file and encoded into the file name, along with dynamic binding of \"glue files\" (DLLs loaded into memory only when needed). The dynamic binding of components was done using a new \"Abstract OS Services DLL\" that looked for the latest version of the appropriate needed component via the file name encoding. This \"glue module\" is then loaded into memory and used. The old log file format of Btrieve 6.x was also replaced with a new centralised log called `PVSW.LOG` and that had a unified and enhanced log file format. They also improved their error messages and error message reporting mechanisms. The MKDE was retained in Pervasive.SQL 7. However, due to the new component architecture's dynamic binding, the internal architecture was modified. The application using Btrieve calls a services manager which then searches through various configured directories for specific encoded filename. The file name loaded for Btrieve files in Backus–Naur form is: ::= \"BIF\" ::= \"W1\" | \"W2\" | \"W3\" | \"W9\" | \"WT\" | \"NW\" | \"O3\" ::= ::= ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" {| class=\"wikitable\" |- bgcolor=\"#cccccc\" |+ Embedded filename platform codes ! Code !! Platform |- | W1 || Windows 3.1x, incl. Windows for Workgroups (Win16) |- | W2 || Extended Windows (32-bit Watcom Extender) |- | W3 || Windows 95, Windows NT (Win32) |- | W9 || Windows 95 |- | WT || Windows NT |- | NW || NetWare 3.x and 4.x |- | O3 || OS/2 (32-bit) |} The \"glue\" module, which is a DLL, is loaded into memory and becomes the interface to the MKDE. The MKDE then determines whether it is configured to be a workstation-based configuration or a server-based configuration. It then passes requests via its communications \"requester\" module onto the database server, or directly modifies the database files if configured in workstation mode. ===Pervasive.SQL 2000/2000i=== Pervasive.SQL 2000 and Pervasive.SQL 2000i use essentially the same architecture as Pervasive.SQL 7, though 2000i includes i*Net server. It uses the same component model, has the ability to use the Btrieve or Scalable SQL engines and continues using an MKDE. This version included support for Red Hat Linux, Caldera OpenLinux, SUSE and Solaris. It also had better integration with Terminal Services, though only one instance of the database engine may run on any terminal server platform. You cannot run separate copies of the database engine within two or more terminal sessions. ===Pervasive.SQL V8=== Introduced in December 2002, Pervasive.SQL V8 improves the performance of both Btrieve and SQL applications using a number of new technologies. *Client side caching greatly improves read performance by maintaining a portion of the database's contents on the local PC. *Turbo Write Acceleration (TWA) groups disk writes into groups, minimizing interactions with disk. *Transaction Logging provides a slightly less failure protection than transaction durability, but improves overall performance. The V8 Security Feature Pack (a mid-release product update designated 8.5) added important new security features designed to lock down Pervasive.SQL data files. Prior to 8.5, access to Btrieve data was controlled by the operating system's security mechanism. This meant that any user who needed read/write access to the database, also needed read/write access to the underlying data files. 8.5 introduced new security models, which allow administrators to control access to the Btrieve data using database security. Once activated, database security no longer requires that the user has access to the underlying files. In addition, client/server configurations no longer require the use of network shares or mapped drives. Applications can reference secure Btrieve data using a URI connection string. ===Pervasive PSQL v9=== Pervasive PSQL v9 includes new Java GUIs, built on the Eclipse framework. These GUIs are available for both Microsoft Windows and Linux. In addition, v9 included many SQL performance and syntax updates, improving both the speed and flexibility of all of the SQL interfaces - ADO.Net, JDBC, ODBC, and OLE DB. Finally, PSQL v9 expanded the Btrieve maximum file size from 64GB in 8.x and earlier file formats to 128 GB in 9.0 format files, and again to 256GB for files in the 9.5 file format. In conjunction with PSQL v9 Pervasive reintroduced the DDF Builder utility and added support for text searching with the Full Text Search (FTS) add-on, which was later removed from the product line. DDF Builder provides a mechanism for Btrieve users to define the meta data for existing Btrieve files, thus allowing Btrieve data to be accessible via SQL tools and utilities. All versions of the MKDE retain full backward read-level compatibility with earlier versions of Btrieve, including those that pre-date introduction of the MKDE itself, and do not change the file's version unless specifically requested to do so. Btrieve files that are in the 5.x or older file formats MUST be rebuilt (using the GUI or command line Rebuild utilities) to 6.x or newer format to support database writes from the 9.0 or newer database engine. ===Pervasive PSQL v10=== Pervasive PSQL v10 was released in September 2007 and was the first version of Pervasive PSQL Server and Client to provide support for 64-bit operating systems. The Btrieve API and distributing tuning interface (DTI) were both enhanced to support 64-bit. Pervasive PSQL Workgroup and other components of the SDK were not enhanced for 64-bit support. The release of Pervasive PSQL v10 was timed to offer support for the then newly available Windows Vista and soon to arrive Windows Server 2008 operating systems. Pervasive PSQL v10 Server, Workgroup and Client all support Windows Vista. Pervasive PSQL v10 Server is Certified for Windows Server 2008. Also included in Pervasive PSQL v10 was Xtreme input/output (XIO), a 32-bit Windows database accelerator that enabled access of extended memory to expand the database cached past the normal 2GB limit on 32-bit Windows systems. Xtreme input/output also included update compression algorithms and streamlined writing techniques to improve database input/output performance. Digital license enforcement, called Product Authorization, was introduced for the Pervasive PSQL product line with Pervasive PSQL v10. Product Authorization was initially implemented with trial downloads and e-commerce orders. Products sold through the Pervasive Distributor and ISV partners were upgrade to include product authorization with the release of Pervasive PSQL v10 SP3 in November 2009. Pervasive PSQL v10 SP3 was also released as a Windows 7 compatible application. Pervasive PSQL v10 retained backward compatibility by using the 9.5 file format with an increase in the maximum data file size to 256GB and increase in the maximum page size to 16,384 bytes. Support for NetWare, Windows NT, Windows 98, Windows ME, DOS 6.22 and 16-bit applications were dropped with Pervasive PSQL v10. Although the Windows and Linux versions of Pervasive PSQL v9 products are no longer sold, Pervasive still sells and supports Pervasive PSQL v9 for NetWare. In 2010, Pervasive Software released Pervasive PSQL v11, which allows users to take full advantage of multithreading for faster database processing. ===Pervasive PSQL v11=== Pervasive PSQL v11 was released in September 2010. One of the key drivers of the engineering effort behind Pervasive PSQL v11 was the redesign of the database engine to increase performance and scalability on multi-core CPU's. Pervasive PSQL v11 optimizes parallel threads performing similar activities, allowing the database to engage multiple cores during task execution. PSQL v11 also provides enhancements to the low-level synchronization mechanisms in the navigational interface. Multiple users can read the same cached file pages simultaneously and their operations can proceed on independent cores. Non-user activity such as checkpoints and log management can run on separate cores and multiple users accessing independent files can proceed on different cores. Multi-core support is available with all versions of PSQL v11: 32- and 64-bit Windows and Linux Servers, and 32-bit Workgroup. Internal testing at Pervasive documented performance increases of 300% when comparing PSQL v10 to PSQL v11 on an 8-core server running Microsoft 2008 Enterprise Server SP2(64-bit). (IPv6) support on Windows is included in Pervasive PSQL v11 with continued support for IPv4 environments. Pervasive PSQL v11 supports IPv6 with both the Btrieve and DTI (Distributed Tuning Interface) access methods. 64-bit server versions of PSQL v11 include a 64-bit relational/SQL engine as well as the 64-bit navigational/Btrieve engine, along with a 64-bit ODBC driver. The driver is installed with the 64-bit versions of PSQL Server and PSQL Client. Pervasive updated the PSQL software development kit with the addition of the Pervasive PSQL ADO.NET Data Provider 3.5. The Data Provider 3.5 is compliant with .NET Framework versions 2.0, 3.0, 3.5, 3.5 SP1 and 4.0, and runs under .NET Framework 4.0 with support for Entity Framework 1.0 features. Pervasive PSQL v11 also updated the PDAC (Pervasive Direct Access Components) access method with support for Embardacero's RAD Studio 2009 and RAD Studio 2010. Product Authorization was extended in Pervasive PSQL v11 to include OEM customers, along with the introduction of a web-based portal for OEM's to generate keys and manage licenses for PSQL v11. Telephone authorization (a method of authorizing Pervasive PSQL without requiring an Internet connection) was first introduced with PSQL v11 and made available to all Pervasive customers. Pervasive PSQL v11 continues with the 9.5 file format, maintaining backward compatibility with previous releases. Support for Windows 2000 was dropped with Pervasive PSQL v11. ===Pervasive PSQL Ecosystem=== Pervasive now offers a number of add-on products which extend the basic features of the PSQL DBMS. The latest versions of each of the products, AuditMaster v7, Backup Agent v3, and DataExchange v4, were released in December 2010. *Pervasive AuditMaster provides real-time auditing of all database interactions, whether Btrieve or SQL. Logs of data events can be queried to track changes to sensitive data. Alerts can also be created to notify the appropriate personnel or launch the associated process. *Pervasive Backup Agent manages PSQL's continuous operations mode and allows backup software to reliably copy online databases. *Pervasive DataExchange provides data synchronization and replication between two or more PSQL engines, ensuring that critical data is always available. ===Btrieve 12=== In February 2016 Actian announced Btrieve 12. Actian say Btrieve 12 has new features, is compatible with Microsoft Windows Vista to 10, and Windows Server 2008 and 2012, and is file format and API compatible with Btrieve 6.15, allowing it to read and write Btrieve 6.15 files from earlier 16-bit and DOS applications. ==See also== * Architecture of Btrieve * Access Database Engine (ACE and formerly JET) ==Notes== ==Sources== * Trocino, Richard B. (1994). The Illustrated Guide to NetWare Btrieve 6.x. Golden West Products International. pp. 19–24. * Novell. Components of NetWare Btrieve. Retrieved December 12, 2004. * Pervasive (2004). Btrieve past, present and future: Remember when Btrieve rocked the database world?. Company history webpage. * Pervasive (March 2001). Pervasive.SQL 2000i: Getting Started (Server Edition). Product manual. ==External links== * Pervasive Software Inc. — makers of Btrieve and PSQL * Btrieve Society * comp.databases.btrieve — Btrieve newsgroup * Pervasive Software online manuals Category:Proprietary database management systems Category:DOS software Category:Windows database-related software Category:Novell NetWare Category:Computer-related introductions in 1982",
 "title": "Btrieve"
}