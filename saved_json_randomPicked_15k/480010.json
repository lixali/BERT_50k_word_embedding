{
 "id": "480010",
 "text": "In mathematical logic, a deduction theorem is a metatheorem that justifies doing conditional proofs — to prove an implication A → B, assume A as an hypothesis and then proceed to derive B — in systems that do not have an explicit inference rule for this. Deduction theorems exist for both propositional logic and first-order logic.Kleene 1967, p. 39, 112; Shoenfield 1967, p. 33 The deduction theorem is an important tool in Hilbert-style deduction systems because it permits one to write more comprehensible and usually much shorter proofs than would be possible without it. In certain other formal proof systems the same conveniency is provided by an explicit inference rule; for example natural deduction calls it implication introduction. In more detail, the propositional logic deduction theorem states that if a formula B is deducible from a set of assumptions \\Delta \\cup \\\\{A\\\\} then the implication A \\to B is deducible from \\Delta ; in symbols, \\Delta \\cup \\\\{A\\\\} \\vdash B implies \\Delta \\vdash A \\to B . In the special case where \\Delta is the empty set, the deduction theorem claim can be more compactly written as: A \\vdash B implies \\vdash A \\to B. The deduction theorem for predicate logic is similar, but comes with some extra constraints (that would for example be satisfied if A is a closed formula). In general a deduction theorem needs to take into account all logical details of the theory under consideration, so each logical system technically needs its own deduction theorem, although the differences are usually minor. The deduction theorem holds for all first-order theories with the usualFor example, Hilbert- style deductive systems, natural deduction, the sequent calculus, the tableaux method, and resolution —see First order logic deductive systems for first- order logic.An explicit verification of this result may be found in https://github.com/georgydunaev/VerifiedMathFoundations/blob/master/SHEN.v However, there are first-order systems in which new inference rules are added for which the deduction theorem fails.Kohlenbach 2008, p. 148 Most notably, the deduction theorem fails to hold in Birkhoff–von Neumann quantum logic, because the linear subspaces of a Hilbert space form a non-distributive lattice. ==Examples of deduction== #\"Prove\" axiom 1: #:*P 1. hypothesis #:*Q 2. hypothesis #:**P 3. reiteration of 1 #:*Q→P 4. deduction from 2 to 3 #:P→(Q→P) 5. deduction from 1 to 4 QED #\"Prove\" axiom 2: #:*P→(Q→R) 1. hypothesis #:**P→Q 2. hypothesis #:***P 3. hypothesis #:***Q 4. modus ponens 3,2 #:***Q→R 5. modus ponens 3,1 #:***R 6. modus ponens 4,5 #:**P→R 7. deduction from 3 to 6 #:*(P→Q)→(P→R) 8. deduction from 2 to 7 #:(P→(Q→R))→((P→Q)→(P→R)) 9. deduction from 1 to 8 QED #Using axiom 1 to show ((P→(Q→P))→R)→R: #:*(P→(Q→P))→R 1. hypothesis #:*P→(Q→P) 2. axiom 1 #:*R 3. modus ponens 2,1 #:((P→(Q→P))→R)→R 4. deduction from 1 to 3 QED ==Virtual rules of inference== From the examples, you can see that we have added three virtual (or extra and temporary) rules of inference to our normal axiomatic logic. These are \"hypothesis\", \"reiteration\", and \"deduction\". The normal rules of inference (i.e. \"modus ponens\" and the various axioms) remain available. 1\\. Hypothesis is a step where one adds an additional premise to those already available. So, if your previous step S was deduced as: : E_1, E_2, ... , E_{n-1}, E_n \\vdash S, then one adds another premise H and gets: : E_1, E_2, ... , E_{n-1}, E_n, H \\vdash H. This is symbolized by moving from the n-th level of indentation to the n+1-th level and saying ::::*S previous step ::::**H hypothesis 2\\. Reiteration is a step where one re-uses a previous step. In practice, this is only necessary when one wants to take a hypothesis which is not the most recent hypothesis and use it as the final step before a deduction step. 3\\. Deduction is a step where one removes the most recent hypothesis (still available) and prefixes it to the previous step. This is shown by unindenting one level as follows: :::::*H hypothesis :::::*......... (other steps) :::::*C (conclusion drawn from H) ::::*H→C deduction ==Conversion from proof using the deduction meta-theorem to axiomatic proof== In axiomatic versions of propositional logic, one usually has among the axiom schemas (where P, Q, and R are replaced by any propositions): *Axiom 1 is: P→(Q→P) *Axiom 2 is: (P→(Q→R))→((P→Q)→(P→R)) *Modus ponens is: from P and P→Q infer Q These axiom schemas are chosen to enable one to derive the deduction theorem from them easily. So it might seem that we are begging the question. However, they can be justified by checking that they are tautologies using truth tables and that modus ponens preserves truth. From these axiom schemas one can quickly deduce the theorem schema P→P (reflexivity of implication) which is used below: # (P→((Q→P)→P))→((P→(Q→P))→(P→P)) from axiom schema 2 with P, (Q→P), P # P→((Q→P)→P) from axiom schema 1 with P, (Q→P) # (P→(Q→P))→(P→P) from modus ponens applied to step 2 and step 1 # P→(Q→P) from axiom schema 1 with P, Q # P→P from modus ponens applied to step 4 and step 3 Suppose that we have that Γ and H prove C, and we wish to show that Γ proves H→C. For each step S in the deduction which is a premise in Γ (a reiteration step) or an axiom, we can apply modus ponens to the axiom 1, S→(H→S), to get H→S. If the step is H itself (a hypothesis step), we apply the theorem schema to get H→H. If the step is the result of applying modus ponens to A and A→S, we first make sure that these have been converted to H→A and H→(A→S) and then we take the axiom 2, (H→(A→S))→((H→A)→(H→S)), and apply modus ponens to get (H→A)→(H→S) and then again to get H→S. At the end of the proof we will have H→C as required, except that now it only depends on Γ, not on H. So the deduction step will disappear, consolidated into the previous step which was the conclusion derived from H. To minimize the complexity of the resulting proof, some preprocessing should be done before the conversion. Any steps (other than the conclusion) which do not actually depend on H should be moved up before the hypothesis step and unindented one level. And any other unnecessary steps (which are not used to get the conclusion or can be bypassed), such as reiterations which are not the conclusion, should be eliminated. During the conversion, it may be useful to put all the applications of modus ponens to axiom 1 at the beginning of the deduction (right after the H→H step). When converting a modus ponens, if A is outside the scope of H, then it will be necessary to apply axiom 1, A→(H→A), and modus ponens to get H→A. Similarly, if A→S is outside the scope of H, apply axiom 1, (A→S)→(H→(A→S)), and modus ponens to get H→(A→S). It should not be necessary to do both of these, unless the modus ponens step is the conclusion, because if both are outside the scope, then the modus ponens should have been moved up before H and thus be outside the scope also. Under the Curry–Howard correspondence, the above conversion process for the deduction meta-theorem is analogous to the conversion process from lambda calculus terms to terms of combinatory logic, where axiom 1 corresponds to the K combinator, and axiom 2 corresponds to the S combinator. Note that the I combinator corresponds to the theorem schema P→P. == Helpful theorems == If one intends to convert a complicated proof using the deduction theorem to a straight-line proof not using the deduction theorem, then it would probably be useful to prove these theorems once and for all at the beginning and then use them to help with the conversion: :A \\to A helps convert the hypothesis steps. :(B \\to C) \\to ((A \\to B) \\to (A \\to C)) helps convert modus ponens when the major premise is not dependent on the hypothesis, replaces axiom 2 while avoiding a use of axiom 1. :(A \\to (B \\to C)) \\to (B \\to (A \\to C)) helps convert modus ponens when the minor premise is not dependent on the hypothesis, replaces axiom 2 while avoiding a use of axiom 1. These two theorems jointly can be used in lieu of axiom 2, although the converted proof would be more complicated: :(A \\to B) \\to ((B \\to C) \\to (A \\to C)) :(A \\to (A \\to C)) \\to (A \\to C) Peirce's law is not a consequence of the deduction theorem, but it can be used with the deduction theorem to prove things which one might not otherwise be able to prove. :((A \\to B) \\to A) \\to A It can also be used to get the second of the two theorems which can used in lieu of axiom 2. ==Proof of the deduction theorem== We prove the deduction theorem in a Hilbert-style deductive system of propositional calculus.Deduction theorem, from Curtis Franks at the University of Notre Dame, retrieved 2020-07-21 Let \\Delta be a set of formulas and A and B formulas, such that \\Delta \\cup \\\\{A\\\\} \\vdash B . We want to prove that \\Delta \\vdash A \\to B . Since \\Delta \\cup \\\\{A\\\\} \\vdash B , there is a proof of B from \\Delta \\cup \\\\{A\\\\}. We prove the theorem by induction on the proof length n; thus the induction hypothesis is that for any \\Delta, A and B such that there is a proof of B from \\Delta \\cup \\\\{A\\\\} of length up to n, \\Delta \\vdash A \\to B holds. If n = 1 then B is member of the set of formulas \\Delta \\cup \\\\{A\\\\}. Thus either B=A, in which case A \\to B is simply A \\to A which is derivable by substitution from p → p that is derivable from the axioms, hence also \\Delta \\vdash A \\to B ; or B is in \\Delta, in which case \\Delta \\vdash B ; it follows from axiom p → (q → p) with substitution that \\Delta \\vdash B \\to (A \\to B) and hence by modus ponens that \\Delta \\vdash A \\to B . Now let us assume the induction hypothesis for proofs of length up to n, and let B be a formula provable from \\Delta \\cup \\\\{A\\\\} with a proof of length n+1. Then there are three possibilities: #B is member of the set of formulas \\Delta \\cup \\\\{A\\\\}; in this case we proceed as for n=0. #B is arrived at by a substitution on a formula φ. Then φ is proven from \\Delta \\cup \\\\{A\\\\} with at most n steps, hence by the induction hypothesis \\Delta \\vdash A \\to \\varphi , where we may write A and φ with different variables. But then we may arrive from A \\to \\varphi at A \\to B by the same substitution which is used to derive B from φ; thus \\Delta \\vdash A \\to B . #B is arrived at by using modus ponens. Then there is a formula C such that \\Delta \\cup \\\\{A\\\\} proves C and C \\to B , and modus ponens is then used to prove B. The proofs of C and C \\to B are with at most n steps, and by the induction hypothesis we have \\Delta \\vdash A \\to C and \\Delta \\vdash A \\to (C \\to B) . By the axiom (p → (q → r)) → ((p → q) → (p → r)) with substitution it follows that \\Delta \\vdash (A \\to (C \\to B)) \\to ((A \\to C) \\to (A \\to B)), and by using modus ponens twice we have \\Delta \\vdash A \\to B . Thus in all cases the theorem holds also for n+1, and by induction the deduction theorem is proven. ==The deduction theorem in predicate logic== The deduction theorem is also valid in first-order logic in the following form: *If T is a theory and F, G are formulas with F closed, and T \\cup \\\\{ F \\\\} \\vdash G, then T \\vdash F \\rightarrow G. Here, the symbol \\vdash means \"is a syntactical consequence of.\" We indicate below how the proof of this deduction theorem differs from that of the deduction theorem in propositional calculus. In the most common versions of the notion of formal proof, there are, in addition to the axiom schemes of propositional calculus (or the understanding that all tautologies of propositional calculus are to be taken as axiom schemes in their own right), quantifier axioms, and in addition to modus ponens, one additional rule of inference, known as the rule of generalization: \"From K, infer ∀vK.\" In order to convert a proof of G from T∪{F} to one of F→G from T, one deals with steps of the proof of G which are axioms or result from application of modus ponens in the same way as for proofs in propositional logic. Steps which result from application of the rule of generalization are dealt with via the following quantifier axiom (valid whenever the variable v is not free in formula H): *(∀v(H→K))→(H→∀vK). Since in our case F is assumed to be closed, we can take H to be F. This axiom allows one to deduce F→∀vK from F→K and generalization, which is just what is needed whenever the rule of generalization is applied to some K in the proof of G. In first-order logic, the restriction of that F be a closed formula can be relaxed given that the free variables in F has not been varied in the deduction of G from T \\cup \\\\{ F \\\\}. In the case that a free variable v in F has been varied in the deduction, we write T \\cup \\\\{ F \\\\} \\vdash^v G (the superscript in the turnstile indicating that v has been varied) and the corresponding form of the deduction theorem is T \\vdash (\\forall vF) \\rightarrow G. ==Example of conversion== To illustrate how one can convert a natural deduction to the axiomatic form of proof, we apply it to the tautology Q→((Q→R)→R). In practice, it is usually enough to know that we could do this. We normally use the natural-deductive form in place of the much longer axiomatic proof. First, we write a proof using a natural-deduction like method: :*Q 1. hypothesis :**Q→R 2. hypothesis :**R 3. modus ponens 1,2 :*(Q→R)→R 4. deduction from 2 to 3 *Q→((Q→R)→R) 5. deduction from 1 to 4 QED Second, we convert the inner deduction to an axiomatic proof: *(Q→R)→(Q→R) 1. theorem schema (A→A) *((Q→R)→(Q→R))→(((Q→R)→Q)→((Q→R)→R)) 2. axiom 2 *((Q→R)→Q)→((Q→R)→R) 3. modus ponens 1,2 *Q→((Q→R)→Q) 4. axiom 1 **Q 5. hypothesis **(Q→R)→Q 6. modus ponens 5,4 **(Q→R)→R 7. modus ponens 6,3 *Q→((Q→R)→R) 8. deduction from 5 to 7 QED Third, we convert the outer deduction to an axiomatic proof: *(Q→R)→(Q→R) 1. theorem schema (A→A) *((Q→R)→(Q→R))→(((Q→R)→Q)→((Q→R)→R)) 2. axiom 2 *((Q→R)→Q)→((Q→R)→R) 3. modus ponens 1,2 *Q→((Q→R)→Q) 4. axiom 1 *[((Q→R)→Q)→((Q→R)→R)]→[Q→(((Q→R)→Q)→((Q→R)→R))] 5. axiom 1 *Q→(((Q→R)→Q)→((Q→R)→R)) 6. modus ponens 3,5 *[Q→(((Q→R)→Q)→((Q→R)→R))]→([Q→((Q→R)→Q)]→[Q→((Q→R)→R))]) 7. axiom 2 *[Q→((Q→R)→Q)]→[Q→((Q→R)→R))] 8. modus ponens 6,7 *Q→((Q→R)→R)) 9. modus ponens 4,8 QED These three steps can be stated succinctly using the Curry–Howard correspondence: *first, in lambda calculus, the function f = λa. λb. b a has type q → (q → r) → r *second, by lambda elimination on b, f = λa. s i (k a) *third, by lambda elimination on a, f = s (k (s i)) k ==See also== * Cut-elimination theorem * Conditional proof * Currying * Propositional calculus * Peirce's law == Notes == ==References== * September/October 2008 * * * . * == External links == * Introduction to Mathematical Logic by Vilnis Detlovs and Karlis Podnieks Podnieks is a comprehensive tutorial. See Section 1.5. * \"Deduction Theorem\" Theorem Category:Metatheorems Category:Proof theory Category:Theorems in the foundations of mathematics",
 "title": "Deduction theorem"
}